/*
 * SVGIconDemo.java
 *
 * Created on September 1, 2005, 7:28 PM
 */

package com.kitfox.svg.example;

import com.kitfox.svg.animation.AnimationElement;
import java.awt.*;
import java.net.*;
import java.io.*;

import com.kitfox.svg.*;
import com.kitfox.svg.app.beans.*;
import com.kitfox.svg.xml.StyleAttribute;



/**
 *
 * @author  kitfox
 */
public class SVGPanelZoomDemoFrame extends javax.swing.JFrame
{
    class IconPanel extends SVGPanel
    {
        public static final long serialVersionUID = 0;
        final URI uri;

        public IconPanel()
        {
            StringReader reader = new StringReader(makeDynamicSVG());
            uri = SVGCache.getSVGUniverse().loadSVG(reader, "myImage"); 
            setSvgURI(uri);

            setPreferredSize(new Dimension(400, 400));
            this.setScaleToFit(true);
        }

        private String makeDynamicSVG()
        {
            StringWriter sw = new StringWriter();
            PrintWriter pw = new PrintWriter(sw);

            pw.println("<svg width=\"400\" height=\"400\" viewBox=\"0 0 400 400\" style=\"fill:none;stroke-width:4\">");
            pw.println("    <circle cx=\"200\" cy=\"200\" r=\"200\" style=\"stroke:blue\"/>");
            pw.println("    <circle cx=\"140\" cy=\"140\" r=\"40\" style=\"stroke:red\"/>");
            pw.println("    <circle cx=\"260\" cy=\"140\" r=\"40\" style=\"stroke:red\"/>");
            pw.println("    <polyline points=\"100 300 150 340 250 240 300 300\" style=\"stroke:red\"/>");
            pw.println("</svg>");

            pw.close();
            return sw.toString();
        }

        public void setZoom(int size)
        {
            SVGDiagram diagram = SVGCache.getSVGUniverse().getDiagram(uri);
            SVGRoot root = diagram.getRoot();

            int x0 = 200 - size / 2;
            int y0 = 200 - size / 2;
            int x1 = size;
            int y1 = size;

            String viewBox = "" + x0 + " " + y0 + " " + x1 + " " + y1;
            try
            {
                root.setAttribute("viewBox", AnimationElement.AT_XML, viewBox);
                root.build();
            } 
            catch (SVGException ex)
            {
                ex.printStackTrace();
            }

            repaint();
        }
    }
    
    public static final long serialVersionUID = 0;
    
    IconPanel panel = new IconPanel();
    
    /** Creates new form SVGIconDemo */
    public SVGPanelZoomDemoFrame()
    {
        initComponents();

        this.getContentPane().add(panel, BorderLayout.CENTER);
        
        pack();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        jPanel1 = new javax.swing.JPanel();
        slider_zoom = new javax.swing.JSlider();

        jPanel1.setLayout(new java.awt.BorderLayout());

        slider_zoom.setMaximum(650);
        slider_zoom.setMinimum(50);
        slider_zoom.setValue(400);
        slider_zoom.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                slider_zoomStateChanged(evt);
            }
        });

        jPanel1.add(slider_zoom, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

    }// </editor-fold>//GEN-END:initComponents

    private void slider_zoomStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_slider_zoomStateChanged
    {//GEN-HEADEREND:event_slider_zoomStateChanged
        panel.setZoom(slider_zoom.getValue());
    }//GEN-LAST:event_slider_zoomStateChanged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
//        java.awt.EventQueue.invokeLater(new Runnable()
//        {
//            public void run()
//            {
                new SVGPanelZoomDemoFrame().setVisible(true);
//            }
//        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSlider slider_zoom;
    // End of variables declaration//GEN-END:variables
    
}
