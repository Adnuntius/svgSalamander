/*
 * SVGIconDemo.java
 *
 * Created on September 1, 2005, 7:28 PM
 */

package com.kitfox.svg.example;

import java.awt.*;
import java.net.*;
import java.io.*;

import com.kitfox.svg.*;
import com.kitfox.svg.app.beans.*;



/**
 *
 * @author  kitfox
 */
public class SVGPanelResizeDemoFrame extends javax.swing.JFrame
{
    class IconPanel extends SVGPanel
    {
        public static final long serialVersionUID = 0;
        
        public IconPanel()
        {
            StringReader reader = new StringReader(makeDynamicSVG());
            URI uri = SVGCache.getSVGUniverse().loadSVG(reader, "myImage");
            setSvgURI(uri);
            
            setPreferredSize(new Dimension(400, 400));
            this.setScaleToFit(true);
        }
        
        private String makeDynamicSVG()
        {
            StringWriter sw = new StringWriter();
            PrintWriter pw = new PrintWriter(sw);
            
            pw.println("<svg width=\"400\" height=\"400\" style=\"fill:none;stroke-width:4\">");
            pw.println("    <circle cx=\"200\" cy=\"200\" r=\"200\" style=\"stroke:blue\"/>");
            pw.println("    <circle cx=\"140\" cy=\"140\" r=\"40\" style=\"stroke:red\"/>");
            pw.println("    <circle cx=\"260\" cy=\"140\" r=\"40\" style=\"stroke:red\"/>");
            pw.println("    <polyline points=\"100 300 150 340 250 240 300 300\" style=\"stroke:red\"/>");
            pw.println("</svg>");
            
            pw.close();
            return sw.toString();
        }
    }
    
    public static final long serialVersionUID = 0;
    
    IconPanel panel = new IconPanel();
    
    /** Creates new form SVGIconDemo */
    public SVGPanelResizeDemoFrame()
    {
        initComponents();
        
        this.getContentPane().add(panel, BorderLayout.CENTER);
        
        pack();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        setLayout(new java.awt.BorderLayout());

    }
    // </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new SVGPanelResizeDemoFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}
